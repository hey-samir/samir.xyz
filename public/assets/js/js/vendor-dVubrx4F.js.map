{"version":3,"file":"vendor-dVubrx4F.js","sources":["../../../node_modules/react/jsx-runtime.js","../../../node_modules/react/cjs/react-jsx-runtime.production.js","../../../node_modules/react/cjs/react.production.js","../../../node_modules/react/index.js","../../../node_modules/react-dom/cjs/react-dom.production.js","../../../node_modules/react-dom/index.js","../../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../../node_modules/motion-utils/dist/es/noop.mjs","../../../node_modules/motion-utils/dist/es/errors.mjs","../../../node_modules/motion-utils/dist/es/memo.mjs","../../../node_modules/motion-utils/dist/es/progress.mjs","../../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../../../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../../../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../../node_modules/framer-motion/dist/es/utils/array.mjs","../../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../../node_modules/framer-motion/dist/es/value/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../../node_modules/framer-motion/dist/es/easing/back.mjs","../../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../../node_modules/framer-motion/dist/es/render/store.mjs","../../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../../../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../../../node_modules/framer-motion/dist/es/utils/use-in-view.mjs"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.act = function () {\n  throw Error(\"act(...) is not supported in production builds of React.\");\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    ReactSharedInternals.T = prevTransition;\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, deps) {\n  return ReactSharedInternals.H.useEffect(create, deps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.0.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license React\n * react-dom.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction noop() {}\nvar Internals = {\n    d: {\n      f: noop,\n      r: function () {\n        throw Error(formatProdErrorMessage(522));\n      },\n      D: noop,\n      C: noop,\n      L: noop,\n      m: noop,\n      X: noop,\n      S: noop,\n      M: noop\n    },\n    p: 0,\n    findDOMNode: null\n  },\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nfunction createPortal$1(children, containerInfo, implementation) {\n  var key =\n    3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: REACT_PORTAL_TYPE,\n    key: null == key ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\nvar ReactSharedInternals =\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.createPortal = function (children, container) {\n  var key =\n    2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  if (\n    !container ||\n    (1 !== container.nodeType &&\n      9 !== container.nodeType &&\n      11 !== container.nodeType)\n  )\n    throw Error(formatProdErrorMessage(299));\n  return createPortal$1(children, container, null, key);\n};\nexports.flushSync = function (fn) {\n  var previousTransition = ReactSharedInternals.T,\n    previousUpdatePriority = Internals.p;\n  try {\n    if (((ReactSharedInternals.T = null), (Internals.p = 2), fn)) return fn();\n  } finally {\n    (ReactSharedInternals.T = previousTransition),\n      (Internals.p = previousUpdatePriority),\n      Internals.d.f();\n  }\n};\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.requestFormReset = function (form) {\n  Internals.d.r(form);\n};\nexports.unstable_batchedUpdates = function (fn, a) {\n  return fn(a);\n};\nexports.useFormState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useFormState(action, initialState, permalink);\n};\nexports.useFormStatus = function () {\n  return ReactSharedInternals.H.useHostTransitionStatus();\n};\nexports.version = \"19.0.0\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { resolveElements } from 'motion-dom';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (typeof onEnd === \"function\") {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = useState(false);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n"],"names":["jsxRuntimeModule","exports","REACT_ELEMENT_TYPE","Symbol","for","REACT_FRAGMENT_TYPE","jsxProd","type","config","maybeKey","key","propName","ref","$$typeof","props","reactJsxRuntime_production","Fragment","jsx","jsxs","require$$0","REACT_PORTAL_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","assign","Object","emptyObject","Component","context","updater","this","refs","ComponentDummy","PureComponent","prototype","isReactComponent","setState","partialState","callback","Error","forceUpdate","pureComponentPrototype","constructor","isPureReactComponent","isArrayImpl","Array","isArray","ReactSharedInternals","H","A","T","S","hasOwnProperty","ReactElement","self","source","owner","isValidElement","object","userProvidedKeyEscapeRegex","getElementKey","element","index","escaperLookup","replace","match","toString","noop$1","mapIntoArray","children","array","escapedPrefix","nameSoFar","oldElement","newKey","invokeCallback","_init","_payload","c","push","maybeIterable","nextNamePrefix","i","length","call","next","done","value","then","thenable","status","reason","fulfilledValue","error","resolveThenable","String","keys","join","mapChildren","func","result","count","child","lazyInitializer","payload","_status","ctor","_result","moduleObject","default","reportGlobalError","reportError","window","ErrorEvent","event","bubbles","cancelable","message","dispatchEvent","process","emit","noop","react_production","Children","map","forEach","forEachFunc","forEachContext","apply","arguments","n","toArray","only","Profiler","StrictMode","Suspense","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","act","cache","fn","cloneElement","childArray","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createElement","childrenLength","defaultProps","createRef","current","forwardRef","render","lazy","memo","compare","startTransition","scope","prevTransition","currentTransition","returnValue","onStartTransitionFinish","unstable_useCacheRefresh","useCacheRefresh","use","usable","useActionState","action","initialState","permalink","useCallback","deps","useContext","Context","useDebugValue","useDeferredValue","initialValue","useEffect","create","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useOptimistic","passthrough","reducer","useReducer","initialArg","init","useRef","useState","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useTransition","version","reactModule","React","formatProdErrorMessage","code","url","encodeURIComponent","Internals","d","f","r","D","C","L","m","X","M","p","findDOMNode","getCrossOriginStringAs","as","input","reactDom_production","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","createPortal","container","nodeType","containerInfo","implementation","createPortal$1","flushSync","previousTransition","previousUpdatePriority","preconnect","href","options","crossOrigin","prefetchDNS","preinit","integrity","fetchPriority","precedence","nonce","preinitModule","preload","referrerPolicy","imageSrcSet","imageSizes","media","preloadModule","requestFormReset","form","unstable_batchedUpdates","a","useFormState","useFormStatus","useHostTransitionStatus","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","err","reactDomModule","LayoutGroupContext","useConstant","PresenceContext","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","PopChildMeasure","React.Component","getSnapshotBeforeUpdate","prevProps","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","PopChild","id","dataset","motionPopId","style","document","head","appendChild","sheet","insertRule","removeChild","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","childId","set","isComplete","values","register","delete","Math","random","_","React.useEffect","Map","usePresence","safeToRemove","getChildKey","onlyElements","filtered","isBrowser","useIsomorphicLayoutEffect","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","renderedChildren","setRenderedChildren","includes","get","exitingChildren","nextChildren","splice","forceRender","has","isEveryExitComplete","isExitComplete","any","invariant","progress","from","to","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","keepAlive","immediate","queue","add","cancel","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","postRender","processBatch","performance","now","max","min","frame","cancelFrame","frameSteps","requestAnimationFrame","LazyContext","strict","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","some","name","validMotionProps","isValidMotionProp","startsWith","shouldForward","isValidProp","require","_a","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","MotionContext","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","motionComponentSymbol","isRefObject","useMotionRef","visualState","visualElement","externalRef","instance","onMount","mount","unmount","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","microtask","queueMicrotask","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","_b","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","createProjectionNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","reactExports","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","features","loadFeatures","displayName","ForwardRefMotionComponent","layoutGroupId","lowercaseSVGElements","isSVGComponent","indexOf","test","getValueState","getVelocity","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isMotionValue","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","onUpdate","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","transition","target","valueTarget","transformPropOrder","transformProps","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","round","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","offset","camelKeys","calcOrigin","origin","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scaleCorrectors","isForcedMotionValue","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","layoutProps","svgMotionConfig","needsMeasure","getBBox","getBoundingClientRect","e","updateSVGDimensions","tagName","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createMotionComponentFactory","shallowCompare","prev","prevLength","resolveVariant","getProps","supportsScrollTimeline","ScrollTimeline","BaseGroupPlaybackControls","animations","stop","runAll","filter","finished","Promise","all","getAll","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","time","speed","startTime","duration","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","onResolve","onReject","catch","getValueTransition","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","isGenerator","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","generateLinearEasing","resolution","points","numPoints","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","b","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","isDragActive","resolveElements","elementOrSelector","selectorCache","Element","elements","querySelectorAll","setupGesture","gestureAbortController","AbortController","passive","signal","abort","filterEvents","pointerType","isNodeOrChild","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","firePointerEvent","PointerEvent","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","isElementKeyboardAccessible","getAttribute","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","positionalKeys","clearTime","newTime","addUniqueItem","arr","item","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","MotionValue","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","isNaN","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","getOptimisedAppearId","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","sanitize","floatRegex","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","prevAnimate","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","motion","thresholds","useInView","setInView","activeIntersections","observer","newOnEnd","disconnect"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253]}