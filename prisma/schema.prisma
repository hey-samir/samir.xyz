// Personal Portfolio Website - Prisma Schema
// This schema defines the data models for the portfolio website
// Learn more about Prisma schemas: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Tag model - Tags that can be associated with portfolio items
model Tag {
  id         Int        @id @default(autoincrement())
  name       String     @unique // Unique tag name (e.g., "Markup", "Acquired")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  portfolios Portfolio[] @relation("PortfolioToTag") // Portfolio items associated with this tag
}

// Portfolio model - Stores company portfolio items
model Portfolio {
  id                  Int       @id @default(autoincrement())
  name                String    // Company name
  category            String    // Portfolio category (e.g., "Fintech", "Health", "Retail", "SaaS")
  logoUrl             String    // URL to company logo
  website             String?   // Optional URL to company website
  featured            Boolean   @default(false) // Whether to feature prominently
  order               Int       @default(0)     // Display order (lower numbers appear first)
  
  // Investment and financial data
  investmentDate      DateTime? // When the investment was made
  initialInvestment   Float?    // Initial investment amount
  currentValuation    Float?    // Current valuation of the investment
  exitDate            DateTime? // Date of exit/acquisition (if applicable)
  exitAmount          Float?    // Amount received on exit (if applicable)
  returnMultiple      Float?    // Investment return multiple (e.g., 2.5x)
  annualizedReturn    Float?    // Annualized percentage return
  status              String?   // Investment status (e.g., "Active", "Exited", "Written Off")
  
  createdAt           DateTime  @default(now()) // When item was added
  updatedAt           DateTime  @updatedAt      // When item was last updated
  tags                Tag[]     @relation("PortfolioToTag") // Tags associated with this portfolio item
}

// Category model - For grouping portfolio items by category
model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique // Category name (e.g., "All", "Fintech", "Health", "Retail", "SaaS")
  order     Int      @default(0) // Display order
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
