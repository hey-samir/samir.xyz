// Personal Portfolio Website - Prisma Schema
// This schema defines the data models for the portfolio website
// Learn more about Prisma schemas: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Tag model - Tags that can be associated with portfolio items
model Tag {
  id         Int        @id @default(autoincrement())
  name       String     @unique // Unique tag name (e.g., "Markup", "Acquired")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  portfolios Portfolio[] @relation("PortfolioToTag") // Portfolio items associated with this tag
}

// Portfolio model - Stores company portfolio items
model Portfolio {
  id                  Int       @id @default(autoincrement())
  name                String    // Company name
  category            String    // Portfolio category (e.g., "Fintech", "Health", "Retail", "SaaS")
  description         String?   @db.VarChar(280) // Short description of the company (limited to 280 chars)
  logoUrl             String    // URL to company logo
  website             String?   // Optional URL to company website
  
  // Investment and financial data
  investment_date     DateTime? // When the investment was made
  initial_investment  Float?    // Initial investment amount
  original_valuation  Float?    // Original valuation at time of investment
  current_valuation   Float?    // Current valuation of the investment
  investment_status   String?   // Investment status (e.g., "Active", "Exited", "Written Off")
  
  createdAt           DateTime  @default(now()) // When item was added at database level
  updatedAt           DateTime  @updatedAt      // When item was last updated at database level
  tags                Tag[]     @relation("PortfolioToTag") // Tags associated with this portfolio item
}

// Category model - For grouping portfolio items by category
model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique // Category name (e.g., "All", "Fintech", "Health", "Retail", "SaaS")
  order     Int      @default(0) // Display order
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
